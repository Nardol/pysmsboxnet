---
name: Release

on:
  release:
    types: ["published"]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and upload artifact
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: ðŸ›  Set up Python3
        uses: actions/setup-python@v5.0.0
        id: python
        with:
          python-version: 3.x
          check-latest: true

      - name: ðŸ“¦ Install dependencies
        run: "python3 -m pip install build"

      - name: Build
        run: "python -m build"

      - name: Upload dist
        uses: actions/upload-artifact@v4.1.0
        with:
          name: dist_files
          path: dist

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to PyPi
    needs: build
    environment:
      name: release
      url: "https://pypi.org/p/pysmsboxnet"
    permissions:
      id-token: write
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Download dist artifact
        uses: actions/download-artifact@v4.1.1
        with:
          name: dist_files
          path: dist

      - name: ðŸš€ Deploy to PyPi
        uses: pypa/gh-action-pypi-publish@v1.8.11

  deploy_doc:
    permissions:
      contents: write
    if: "!github.event.release.prerelease"
    needs: deploy
    runs-on: ubuntu-latest
    name: Build and deploydocumentation
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: ðŸ›  Set up Python3
        uses: actions/setup-python@v5.0.0
        id: python
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: requirements_doc.txt
          check-latest: true

      - name: ðŸ“¦ Install dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements_doc.txt
          pip3 install -e .

      - name: Get version
        id: get-version
        run: |
          echo "VERSION=$(setuptools-git-versioning)" >> $GITHUB_OUTPUT

      - name: Build documentation using sphinx
        run: make -C docs html

      - name: deploy documentation
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          folder: docs/_build/html
          target-folder: ${{ steps.get-version.outputs.VERSION }}

      - name: "Generate index.html"
        run: |
          mkdir tmpindex
          RELEASE="${{ steps.get-version.outputs.VERSION }}"
          echo "<html>
          <head>
          <title>Redirecting</title>
          </head>
          <body>
          Redirecting to
          <a href=\"../${RELEASE}/\">
          last stable version documentation
          </a>
          <meta http-equiv=\"refresh\" content=\"2;URL=../${RELEASE}/\">
          </body>
          </html>" > tmpindex/index.html

      - name: deploy updated index
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          folder: tmpindex
          target-folder: stable
