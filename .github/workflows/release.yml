---
# yamllint disable rule:line-length
name: Release

on:
  release:
    types: ["published"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and upload artifact
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: ðŸ›  Set up Python3
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        id: python

      - name: Build
        run: uv build

      - name: Upload dist
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: dist_files
          path: dist

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to PyPi
    needs: build
    environment:
      name: release
      url: "https://pypi.org/p/pysmsboxnet"
    permissions:
      id-token: write
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Download dist artifact
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: dist_files
          path: dist

      - name: ðŸš€ Deploy to PyPi
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          attestations: true

  deploy_doc:
    permissions:
      contents: write
    if: "!github.event.release.prerelease"
    needs: deploy
    runs-on: ubuntu-latest
    name: Build and deploy documentation
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: ðŸ›  Set up Python3 and uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        id: python

      - name: ðŸ“¦ Install dependencies
        run: uv sync --frozen --group ci

      - name: Get version
        id: get-version
        run: |
          echo "VERSION=$(uv run hatchling version)" >> $GITHUB_OUTPUT

      - name: Build documentation using sphinx
        run: uv run make -C docs html

      - name: deploy documentation
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4.7.3
        with:
          folder: docs/_build/html
          target-folder: ${{ steps.get-version.outputs.VERSION }}

      - name: "Generate index.html"
        run: |
          mkdir tmpindex
          RELEASE="${{ steps.get-version.outputs.VERSION }}"
          echo "<html>
          <head>
          <title>Redirecting</title>
          </head>
          <body>
          Redirecting to
          <a href=\"../${RELEASE}/\">
          last stable version documentation
          </a>
          <meta http-equiv=\"refresh\" content=\"2;URL=../${RELEASE}/\">
          </body>
          </html>" > tmpindex/index.html

      - name: deploy updated index
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4.7.3
        with:
          folder: tmpindex
          target-folder: stable
